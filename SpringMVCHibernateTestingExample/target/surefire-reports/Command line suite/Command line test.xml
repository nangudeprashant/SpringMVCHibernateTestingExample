<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite hostname="DELL" name="Command line test" tests="23" failures="0" timestamp="20 Feb 2020 08:51:47 GMT" time="2.546" errors="0">
  <testcase name="@BeforeClass springTestContextPrepareTestInstance" time="0.0" classname="com.javaLive.springmvc.dao.EmployeeDaoImplTest">
    <failure type="java.lang.IllegalStateException" message="Failed to load ApplicationContext">
      <![CDATA[java.lang.IllegalStateException: Failed to load ApplicationContext
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:124)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:83)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:117)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:83)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:230)
	at org.springframework.test.context.testng.AbstractTestNGSpringContextTests.springTestContextPrepareTestInstance(AbstractTestNGSpringContextTests.java:149)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'employeeDao': Unsatisfied dependency expressed through field 'sessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sessionFactory' defined in com.javaLive.springmvc.configuration.HibernateTestConfiguration: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.orm.hibernate4.LocalSessionFactoryBean]: Factory method 'sessionFactory' threw exception; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in com.javaLive.springmvc.configuration.HibernateTestConfiguration: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [javax.sql.DataSource]: Factory method 'dataSource' threw exception; nested exception is java.lang.IllegalStateException: Required key 'jdbc.driverClassName' not found
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:588)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:88)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1272)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:553)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:312)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:308)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:761)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:867)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:543)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:128)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:60)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.delegateLoading(AbstractDelegatingSmartContextLoader.java:106)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.loadContext(AbstractDelegatingSmartContextLoader.java:249)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:98)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:116)
	... 39 more
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sessionFactory' defined in com.javaLive.springmvc.configuration.HibernateTestConfiguration: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.orm.hibernate4.LocalSessionFactoryBean]: Factory method 'sessionFactory' threw exception; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in com.javaLive.springmvc.configuration.HibernateTestConfiguration: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [javax.sql.DataSource]: Factory method 'dataSource' threw exception; nested exception is java.lang.IllegalStateException: Required key 'jdbc.driverClassName' not found
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1181)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1075)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:513)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:312)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:308)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1066)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:585)
	... 57 more
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.orm.hibernate4.LocalSessionFactoryBean]: Factory method 'sessionFactory' threw exception; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in com.javaLive.springmvc.configuration.HibernateTestConfiguration: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [javax.sql.DataSource]: Factory method 'dataSource' threw exception; nested exception is java.lang.IllegalStateException: Required key 'jdbc.driverClassName' not found
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:189)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:588)
	... 69 more
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in com.javaLive.springmvc.configuration.HibernateTestConfiguration: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [javax.sql.DataSource]: Factory method 'dataSource' threw exception; nested exception is java.lang.IllegalStateException: Required key 'jdbc.driverClassName' not found
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1181)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1075)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:513)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:312)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:308)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.obtainBeanInstanceFromFactory(ConfigurationClassEnhancer.java:389)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:361)
	at com.javaLive.springmvc.configuration.HibernateTestConfiguration$$EnhancerBySpringCGLIB$$af805302.dataSource(<generated>)
	at com.javaLive.springmvc.configuration.HibernateTestConfiguration.sessionFactory(HibernateTestConfiguration.java:35)
	at com.javaLive.springmvc.configuration.HibernateTestConfiguration$$EnhancerBySpringCGLIB$$af805302.CGLIB$sessionFactory$2(<generated>)
	at com.javaLive.springmvc.configuration.HibernateTestConfiguration$$EnhancerBySpringCGLIB$$af805302$$FastClassBySpringCGLIB$$cdd37e18.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:228)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:358)
	at com.javaLive.springmvc.configuration.HibernateTestConfiguration$$EnhancerBySpringCGLIB$$af805302.sessionFactory(<generated>)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:162)
	... 70 more
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [javax.sql.DataSource]: Factory method 'dataSource' threw exception; nested exception is java.lang.IllegalStateException: Required key 'jdbc.driverClassName' not found
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:189)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:588)
	... 92 more
Caused by: java.lang.IllegalStateException: Required key 'jdbc.driverClassName' not found
	at org.springframework.core.env.AbstractPropertyResolver.getRequiredProperty(AbstractPropertyResolver.java:183)
	at org.springframework.core.env.AbstractEnvironment.getRequiredProperty(AbstractEnvironment.java:553)
	at com.javaLive.springmvc.configuration.HibernateTestConfiguration.dataSource(HibernateTestConfiguration.java:44)
	at com.javaLive.springmvc.configuration.HibernateTestConfiguration$$EnhancerBySpringCGLIB$$af805302.CGLIB$dataSource$0(<generated>)
	at com.javaLive.springmvc.configuration.HibernateTestConfiguration$$EnhancerBySpringCGLIB$$af805302$$FastClassBySpringCGLIB$$cdd37e18.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:228)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:358)
	at com.javaLive.springmvc.configuration.HibernateTestConfiguration$$EnhancerBySpringCGLIB$$af805302.dataSource(<generated>)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:162)
	... 93 more
... Removed 42 stack frames]]>
    </failure>
  </testcase> <!-- @BeforeClass springTestContextPrepareTestInstance -->
  <testcase name="@BeforeMethod springTestContextBeforeTestMethod" time="0.0" classname="com.javaLive.springmvc.dao.EmployeeDaoImplTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod springTestContextBeforeTestMethod -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="com.javaLive.springmvc.dao.EmployeeDaoImplTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@BeforeMethod springTestContextBeforeTestMethod" time="0.0" classname="com.javaLive.springmvc.dao.EmployeeDaoImplTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod springTestContextBeforeTestMethod -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="com.javaLive.springmvc.dao.EmployeeDaoImplTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@BeforeMethod springTestContextBeforeTestMethod" time="0.0" classname="com.javaLive.springmvc.dao.EmployeeDaoImplTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod springTestContextBeforeTestMethod -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="com.javaLive.springmvc.dao.EmployeeDaoImplTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@BeforeMethod springTestContextBeforeTestMethod" time="0.0" classname="com.javaLive.springmvc.dao.EmployeeDaoImplTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod springTestContextBeforeTestMethod -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="com.javaLive.springmvc.dao.EmployeeDaoImplTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@BeforeMethod springTestContextBeforeTestMethod" time="0.0" classname="com.javaLive.springmvc.dao.EmployeeDaoImplTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod springTestContextBeforeTestMethod -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="com.javaLive.springmvc.dao.EmployeeDaoImplTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@BeforeMethod springTestContextBeforeTestMethod" time="0.0" classname="com.javaLive.springmvc.dao.EmployeeDaoImplTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod springTestContextBeforeTestMethod -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="com.javaLive.springmvc.dao.EmployeeDaoImplTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="deleteEmployee" time="0.031" classname="com.javaLive.springmvc.controller.AppControllerTest"/>
  <testcase name="editEmployee" time="0.078" classname="com.javaLive.springmvc.controller.AppControllerTest"/>
  <testcase name="listEmployees" time="0.031" classname="com.javaLive.springmvc.controller.AppControllerTest"/>
  <testcase name="newEmployee" time="0.0" classname="com.javaLive.springmvc.controller.AppControllerTest"/>
  <testcase name="saveEmployeeWithSuccess" time="0.0" classname="com.javaLive.springmvc.controller.AppControllerTest"/>
  <testcase name="saveEmployeeWithValidationError" time="0.0" classname="com.javaLive.springmvc.controller.AppControllerTest"/>
  <testcase name="saveEmployeeWithValidationErrorNonUniqueSSN" time="0.0" classname="com.javaLive.springmvc.controller.AppControllerTest"/>
  <testcase name="updateEmployeeWithSuccess" time="0.0" classname="com.javaLive.springmvc.controller.AppControllerTest"/>
  <testcase name="updateEmployeeWithValidationError" time="0.0" classname="com.javaLive.springmvc.controller.AppControllerTest"/>
  <testcase name="updateEmployeeWithValidationErrorNonUniqueSSN" time="0.0" classname="com.javaLive.springmvc.controller.AppControllerTest"/>
  <testcase name="deleteEmployeeByInvalidSsn" time="0.0" classname="com.javaLive.springmvc.dao.EmployeeDaoImplTest">
    <skipped/>
  </testcase> <!-- deleteEmployeeByInvalidSsn -->
  <testcase name="deleteEmployeeBySsn" time="0.0" classname="com.javaLive.springmvc.dao.EmployeeDaoImplTest">
    <skipped/>
  </testcase> <!-- deleteEmployeeBySsn -->
  <testcase name="findAllEmployees" time="0.0" classname="com.javaLive.springmvc.dao.EmployeeDaoImplTest">
    <skipped/>
  </testcase> <!-- findAllEmployees -->
  <testcase name="findById" time="0.004" classname="com.javaLive.springmvc.dao.EmployeeDaoImplTest">
    <skipped/>
  </testcase> <!-- findById -->
  <testcase name="findEmployeeBySsn" time="0.004" classname="com.javaLive.springmvc.dao.EmployeeDaoImplTest">
    <skipped/>
  </testcase> <!-- findEmployeeBySsn -->
  <testcase name="saveEmployee" time="0.0" classname="com.javaLive.springmvc.dao.EmployeeDaoImplTest">
    <skipped/>
  </testcase> <!-- saveEmployee -->
  <testcase name="deleteEmployeeBySsn" time="0.004" classname="com.javaLive.springmvc.service.EmployeeServiceImplTest"/>
  <testcase name="findAllEmployees" time="0.0" classname="com.javaLive.springmvc.service.EmployeeServiceImplTest"/>
  <testcase name="findById" time="0.004" classname="com.javaLive.springmvc.service.EmployeeServiceImplTest"/>
  <testcase name="findEmployeeBySsn" time="0.004" classname="com.javaLive.springmvc.service.EmployeeServiceImplTest"/>
  <testcase name="isEmployeeSsnUnique" time="0.004" classname="com.javaLive.springmvc.service.EmployeeServiceImplTest"/>
  <testcase name="saveEmployee" time="0.008" classname="com.javaLive.springmvc.service.EmployeeServiceImplTest"/>
  <testcase name="updateEmployee" time="0.0" classname="com.javaLive.springmvc.service.EmployeeServiceImplTest"/>
</testsuite> <!-- Command line test -->
